cmake_minimum_required(VERSION 3.30)

project(mcsexec_test VERSION 0.1.0.0 LANGUAGES CXX)
# .cmake
include(cmake/output.cmake)

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_EXTENSIONS OFF) # 避免扩展 -std=gnu++23 
set(CMAKE_CXX_STANDARD_REQUIRED True)

set(CMAKE_EXPORT_COMPILE_COMMANDS YES)
set(CMAKE_CXX_SCAN_FOR_MODULES YES)


# 定义一个头文件集合
file(GLOB_RECURSE HEADERS "${PROJECT_SOURCE_DIR}/include/*.cppm")
message("HEADERS: " ${HEADERS})
# 使用 HEADER_SET 指定头文件集合
add_library(mcsexec)
target_sources(mcsexec
    PUBLIC
        FILE_SET CXX_MODULES
        BASE_DIRS ${PROJECT_SOURCE_DIR}/include
        FILES ${HEADERS}
)

set_target_properties(mcsexec PROPERTIES LINKER_LANGUAGE CXX)
target_compile_options(mcsexec PRIVATE -fmodules-ts)
target_compile_features(mcsexec PRIVATE cxx_std_23)

add_executable(${PROJECT_NAME} src/hello.cpp)
target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE -Wall -Werror -Wextra -pedantic)
target_link_libraries(${PROJECT_NAME} PRIVATE mcsexec)
set_target_properties(${PROJECT_NAME} PROPERTIES LINKER_LANGUAGE CXX)
target_compile_options(${PROJECT_NAME} PRIVATE -fmodules-ts)
target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_23)
